{"version":3,"sources":["app/components/person-form.js","app/components/persons/person/person.js","app/components/persons/persons.js","app/components/filter.js","app/services/phonebook.js","app/components/Notification.js","app/App.js","index.js"],"names":["PersonForm","addperson","setName","setNumber","name","number","onSubmit","value","onChange","e","target","Person","data","deletePerson","id","onClick","Persons","props","personsToShow","filter","person","toUpperCase","includes","map","key","Filter","newFilter","setFilter","baseURL","axios","get","then","response","newObject","post","put","delete","Notification","message","error","style","color","fontStyle","font","background","border","margin","padding","textAlign","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setMessage","setError","useEffect","personsService","console","log","clearInpunts","showMessage","setTimeout","preventDefault","personObject","window","confirm","length","catch","err","concat","findedPerson","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03a34a91.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PersonForm = ({addperson, setName,setNumber, name, number}) => {\r\n\r\n    const handleNameChange = (e) => setName(e.target.value);\r\n    const handleNumberChange = (e) => setNumber(e.target.value);\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={addperson}>\r\n                <div>Name:\r\n                    <input\r\n                        value={name}\r\n                        onChange={handleNameChange}\r\n                    />\r\n                </div>\r\n\r\n                <br/>\r\n                <div>number: <input\r\n                    value={number}\r\n                    onChange={handleNumberChange}\r\n                /></div>\r\n                <br/>\r\n                <button>add</button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default PersonForm\r\n","import React from \"react\";\r\n\r\nconst Person = ({data,deletePerson}) => {\r\n\r\n    return(\r\n        <div>\r\n            {data.name} - {data.number}\r\n            <button\r\n                value={data.id}\r\n                onClick={deletePerson}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Person\r\n","import React from \"react\";\r\nimport Person from \"./person/person\";\r\n\r\nconst Persons = (props) => {\r\n    const personsToShow =\r\n        props.data.filter(person => {\r\n            if (person.name.toUpperCase().includes(props.filter.toUpperCase())) {\r\n                return person\r\n            }\r\n            return null\r\n        });\r\n\r\n    const rows = () => personsToShow.map(person =>\r\n        <Person\r\n            key={person.name}\r\n            data={person}\r\n            deletePerson={props.deletePerson}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {rows()}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Persons\r\n","import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n\r\n    const handleFilterChange = (e) => {\r\n        props.setFilter(e.target.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <div>filter shown with\r\n                    <input\r\n                        value={props.newFilter}\r\n                        onChange={handleFilterChange}\r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Filter\r\n","import axios from 'axios'\r\nconst baseURL = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL);\r\n    return request.then(response => response.data);\r\n};\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseURL, newObject);\r\n    return request.then(response => response.data);\r\n};\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n};\r\nconst remove= (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response => response.data);\r\n};\r\nconst getOne= (id) => {\r\n    const request = axios.get(`${baseURL}/${id}`)\r\n    return request.then(response => response.data);\r\n};\r\n\r\n\r\n\r\nexport default {getAll, create, update, remove, getOne};\r\n","import React from 'react';\r\n\r\nconst Notification = ({message, error}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    const succeed = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        font: '16px',\r\n        background: 'lightgrey',\r\n        border: '1px solid green',\r\n        margin: '10px',\r\n        padding: '10px',\r\n        textAlign: 'center'\r\n    }\r\n    const warning = {\r\n        color: 'red',\r\n        fontStyle: 'italic',\r\n        font: '16px',\r\n        background: 'lightgrey',\r\n        border: '1px solid red',\r\n        margin: '10px',\r\n        padding: '10px',\r\n        textAlign: 'center'\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={error ? warning: succeed}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n","import React, {useState, useEffect} from 'react';\nimport PersonForm from \"./components/person-form\";\nimport Persons from \"./components/persons/persons\";\nimport Filter from \"./components/filter\";\nimport personsService from './services/phonebook'\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newFilter, setFilter] = useState('');\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [message, setMessage] = useState(null);\n    const [error, setError] = useState(false);\n\n\n    useEffect(() => {\n        personsService\n            .getAll()\n            .then(response => {\n                console.log(response)\n                setPersons(response);\n            })\n    }, []);\n\n    const clearInpunts = () => {\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const showMessage = (message) => {\n        setMessage(message)\n        setTimeout(() => {\n            setMessage(null)\n        }, 3000)\n    }\n\n    const addPerson = (e) => {\n        e.preventDefault()\n\n        const personObject = {\n            name: newName,\n            number: newNumber\n        };\n\n        const arr = persons.map(person => {\n            return person.name.toUpperCase()\n        });\n\n        if (arr.includes(newName.toUpperCase())) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                personsService\n                    .update(persons.length, personObject)\n                    .then(response => {\n                        setError(false)\n                        showMessage(`${newName} phone number updated`)\n                        personsService\n                            .getAll()\n                            .then(response => {\n                                setPersons(response);\n                                clearInpunts()\n                            })\n                    })\n                    .catch(err => {\n                        setError(true)\n                        showMessage(`Information of ${newName} has already been removed from server`)\n                        personsService\n                            .getAll()\n                            .then(response => {\n                                setPersons(response);\n                                clearInpunts()\n                            })\n                    })\n                return;\n            }\n        }\n\n        personsService\n            .create(personObject)\n            .then(response => {\n                setError(false)\n                showMessage(`Added ${newName}`)\n                setPersons(persons.concat(response))\n                clearInpunts()\n            })\n    };\n\n\n    const deletePerson = (e) => {\n        e.preventDefault()\n        const id = +e.target.value;\n        const findedPerson = persons.find(person => person.id === id)\n        console.log(findedPerson)\n        if (!window.confirm(`Delete ${findedPerson.name}`)) {\n            return\n        }\n\n        personsService\n            .remove(findedPerson.id)\n            .then(response => {\n                personsService\n                    .getAll()\n                    .then(response => {\n                        console.log(response)\n                        setPersons(response);\n                        setError(true)\n                        showMessage(`${findedPerson.name} removed`)\n                    })\n            })\n            .catch(err => {\n                setError(true)\n                showMessage(`Information of ${newName} has already been removed from server`)\n                personsService\n                    .getAll()\n                    .then(response => {\n                        setPersons(response);\n                        clearInpunts()\n                    })\n            })\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification\n                message={message}\n                error={error}\n            />\n            <Filter\n                filter={newFilter}\n                setFilter={setFilter}/>\n            <h3>Add a new</h3>\n            <PersonForm\n                addperson={addPerson}\n                setNumber={setNewNumber}\n                setName={setNewName}\n                name={newName}\n                number={newNumber}\n            />\n            <h3>Numbers</h3>\n\n            <Persons data={persons}\n                     filter={newFilter}\n                     deletePerson={deletePerson}\n            />\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}